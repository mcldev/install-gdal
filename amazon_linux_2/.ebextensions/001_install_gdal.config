# This package relies on an accessible S3 bucket "INSTALL_BUCKET_NAME" containing:
# geos-${INSTALL_GEOS_VER}.tar.gz
# proj-${INSTALL_PROJ_VER}.tar.gz
# gdal-${INSTALL_GDAL_VER}.tar.gz
# GDAL-${INSTALL_GDAL_VER}-cp38-cp38-linux_x86_64.whl
packages:
  yum:
    # Proj > GDAL
    sqlite-devel: []
    libtiff: []
    numpy: []

commands:
  01_install_geos:
    command: |
      sudo aws s3 cp s3://${INSTALL_BUCKET_NAME}/gdal/geos-${INSTALL_GEOS_VER}.tar.gz /tmp/geos-${INSTALL_GEOS_VER}.tar.gz
      sudo tar -xvf /tmp/geos-${INSTALL_GEOS_VER}.tar.gz -C /usr/local
      sudo rm -f /tmp/geos-${INSTALL_GEOS_VER}.tar.gz
    test: "[ ! -f /usr/local/lib/libgeos_c.so ]"
    env:
      INSTALL_BUCKET_NAME:
        "Fn::GetOptionSetting":
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: INSTALL_BUCKET_NAME
      INSTALL_GEOS_VER:
        "Fn::GetOptionSetting":
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: INSTALL_GEOS_VER

  02_install_proj:
    command: |
      sudo aws s3 cp s3://${INSTALL_BUCKET_NAME}/gdal/proj-${INSTALL_PROJ_VER}.tar.gz /tmp/proj-${INSTALL_PROJ_VER}.tar.gz
      sudo tar -xvf /tmp/proj-${INSTALL_PROJ_VER}.tar.gz -C /usr/local
      sudo rm -f /tmp/proj-${INSTALL_PROJ_VER}.tar.gz
    test: "[ ! -f /usr/local/lib/libproj.so ]"
    env:
      INSTALL_BUCKET_NAME:
        "Fn::GetOptionSetting":
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: INSTALL_BUCKET_NAME
      INSTALL_PROJ_VER:
        "Fn::GetOptionSetting":
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: INSTALL_PROJ_VER

  03_install_gdal:
    command: |
      sudo aws s3 cp s3://${INSTALL_BUCKET_NAME}/gdal/gdal-${INSTALL_GDAL_VER}.tar.gz /tmp/gdal-${INSTALL_GDAL_VER}.tar.gz
      sudo tar -xvf /tmp/gdal-${INSTALL_GDAL_VER}.tar.gz -C /usr/local
      sudo rm -f /tmp/gdal-${INSTALL_GDAL_VER}.tar.gz
    test: "[ ! -f /usr/local/lib/libgdal.so ]"
    env:
      INSTALL_BUCKET_NAME:
        "Fn::GetOptionSetting":
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: INSTALL_BUCKET_NAME
      INSTALL_GDAL_VER:
        "Fn::GetOptionSetting":
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: INSTALL_GDAL_VER

  04_refresh_shared_libraries:
    command: ldconfig


container_commands:
  # This fixes the error: no module named _gdal_array - installs precompiled gdal
  #  OR uninstall, then install numpy and reinstall
  01_reinstall_gdal:
    command: |
      echo "Downloading GDAL wheel"
      aws s3 cp s3://${INSTALL_BUCKET_NAME}/gdal/GDAL-${INSTALL_GDAL_VER}-cp38-cp38-linux_x86_64.whl /tmp/GDAL-${INSTALL_GDAL_VER}-cp38-cp38-linux_x86_64.whl
      echo "Installing Precompiled GDAL"
      source ${PYTHONPATH}/activate && ${PYTHONPATH}/pip install /tmp/GDAL-${INSTALL_GDAL_VER}-cp38-cp38-linux_x86_64.whl --force-reinstall
      echo "Removing old wheel"
      rm -f /tmp/GDAL-${INSTALL_GDAL_VER}-cp38-cp38-linux_x86_64.whl
    ignoreErrors: false

  02_check_python_gdal:
    command: source ${PYTHONPATH}/activate && ${PYTHONPATH}/python -c 'import osgeo.gdal; print(osgeo.gdal.__version__); print(osgeo.gdal.__file__)'
    ignoreErrors: false


option_settings:
  aws:elasticbeanstalk:application:environment:
    PATH: /usr/local/bin:$PATH
    LD_LIBRARY_PATH: /usr/local/lib:$LD_LIBRARY_PATH
    GDAL_LIBRARY_PATH: /usr/local/lib/libgdal.so
    PROJ_LIB: /usr/local/share/proj
    GDAL_DATA: /usr/local/share/gdal
