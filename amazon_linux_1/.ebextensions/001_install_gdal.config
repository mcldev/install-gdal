files:
  "/etc/profile.d/gdal_paths.sh":
    mode: "000755"
    owner: root
    group: root
    content: |

      export GDAL_VER="2.2.1"
      export GDAL_DOWNLOAD_DIR="/tmp/gdal"
      export GDAL_BUILD_DIR="/opt/gdal"

      # replace the following with own bucket name
      export S3_INSTALL_BUCKET=my-bucket-build-files

      export GDAL_DOWNLOAD_FILENAME="gdal-${GDAL_VER}.tar.gz"
      export GDAL_BUILD_FILENAME="gdal-${GDAL_VER}-amz1.tar.gz"
      export GDAL_MAKE_FILENAME="gdal-${GDAL_VER}-make-dir.tar.gz"

      export GDAL_MAKE_DIR="${GDAL_DOWNLOAD_DIR}/gdal-${GDAL_VER}"
      export GDAL_BIN_PATH="${GDAL_BUILD_DIR}/bin"
      export GDAL_LIB_PATH="${GDAL_BUILD_DIR}/lib"
      export GDAL_DATA="${GDAL_LIB_PATH}"

      export GDAL_PYTHON_PATH="${GDAL_BUILD_DIR}/lib64/python2.7/site-packages"
      export GDAL_PYTHON_INSTALL_PATH="${GDAL_MAKE_DIR}/swig/python"

      export PATH="${GDAL_BIN_PATH}:${GDAL_LIB_PATH}:$PATH"
      export PATH="${GDAL_PYTHON_INSTALL_PATH}/scripts:$PATH"
      export PYTHONPATH="$PYTHONPATH:${GDAL_PYTHON_PATH}:${GDAL_BUILD_DIR}"
      export LD_LIBRARY_PATH="${GDAL_LIB_PATH}:$LD_LIBRARY_PATH"


  "/tmp/install_gdal.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      set -xe

      # http://scigeo.org/articles/howto-install-latest-geospatial-software-on-linux.html#gdal

      #Load paths
      #--------------------------------
      source /etc/profile.d/gdal_paths.sh

      # Exit if Build directory exists, or make them
      #--------------------------------
      if [ ! -d "$GDAL_BUILD_DIR" ]; then
          mkdir -p ${GDAL_BUILD_DIR}
      #else
          #echo "GDAL dir exists...exiting"
          #exit 0
          # for debugging and reinstalling
          #rm -rf ${GDAL_BUILD_DIR}
      fi

      if [ ! -d "$GDAL_DOWNLOAD_DIR" ]; then
          mkdir -p ${GDAL_DOWNLOAD_DIR}
      #else
          # for debugging and reinstalling
          #rm -rf ${GDAL_DOWNLOAD_DIR}
      fi

      # Install build dependencies
      #--------------------------------
      yum -y update
      yum-config-manager --enable epel
      yum -y install make automake gcc gcc-c++ libcurl-devel proj-devel geos-devel libxml2-devel python-devel numpy swig

      # Get Prebuilt GDAL tar and unzip from S3 - if exists!
      #--------------------------------
      s3_path="s3://${S3_INSTALL_BUCKET}/${GDAL_BUILD_FILENAME}"
      s3_count=$(aws s3 ls $s3_path | wc -l)
      if [ $s3_count -gt 0 ]
      then
        echo "Prebuilt S3 file exists"

        # Download GDAL files and unzip (use odims-build-files bucket)
        #--------------------------------
        aws s3 cp s3://${S3_INSTALL_BUCKET}/${GDAL_BUILD_FILENAME} /tmp/${GDAL_BUILD_FILENAME}
        aws s3 cp s3://${S3_INSTALL_BUCKET}/${GDAL_MAKE_FILENAME} /tmp/${GDAL_MAKE_FILENAME}
        mkdir -p ${GDAL_BUILD_DIR}
        mkdir -p ${GDAL_MAKE_DIR}
        tar -xzvf /tmp/${GDAL_BUILD_FILENAME} -C ${GDAL_BUILD_DIR}
        tar -xzvf /tmp/${GDAL_MAKE_FILENAME} -C ${GDAL_MAKE_DIR}

      else

        echo "Prebuilt S3 file does not exist"

        # Get GDAL tar and unzip
        #--------------------------------
        wget http://download.osgeo.org/gdal/${GDAL_VER}/${GDAL_DOWNLOAD_FILENAME} -O ${GDAL_DOWNLOAD_DIR}/${GDAL_DOWNLOAD_FILENAME}
        tar -xzvf ${GDAL_DOWNLOAD_DIR}/${GDAL_DOWNLOAD_FILENAME} -C ${GDAL_DOWNLOAD_DIR}

        # Make + Install GDAL for Amazon Linux - exclude python to avoid the python modules from being installed system-wide
        #--------------------------------
        (cd ${GDAL_MAKE_DIR} && ./configure --prefix=${GDAL_BUILD_DIR} --without-python --without-libtool)
        (cd ${GDAL_MAKE_DIR} && make)
        (cd ${GDAL_MAKE_DIR} && make install)

        # Build Python Path
        #--------------------------------
        if [ ! -d "$GDAL_PYTHON_PATH" ]; then
            mkdir -p ${GDAL_PYTHON_PATH}
        fi

        # Make Python
        #--------------------------------
        (cd ${GDAL_MAKE_DIR}/swig && make )

        # Save as zip for later and upload to S3
        #--------------------------------
        (cd ${GDAL_MAKE_DIR} && tar -zcvf /tmp/${GDAL_MAKE_FILENAME} *)
        (cd ${GDAL_BUILD_DIR} && tar -zcvf /tmp/${GDAL_BUILD_FILENAME} *)
        aws s3 cp /tmp/${GDAL_MAKE_FILENAME} s3://${S3_INSTALL_BUCKET}/${GDAL_MAKE_FILENAME}
        aws s3 cp /tmp/${GDAL_BUILD_FILENAME} s3://${S3_INSTALL_BUCKET}/${GDAL_BUILD_FILENAME}
        rm /tmp/${GDAL_MAKE_FILENAME}
        rm /tmp/${GDAL_BUILD_FILENAME}

      fi

      #Check version:
      #--------------------------------
      echo "###################### CHECK GLOBAL GDAL VERSION HERE: ######################"
      gdal-config --version


  "/tmp/install_python_gdal.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      set -xe

      #Load paths
      #--------------------------------
      source /etc/profile.d/gdal_paths.sh

      # Install Python module to Host
      #--------------------------------
      (cd ${GDAL_PYTHON_INSTALL_PATH}; python setup.py install --prefix=${GDAL_BUILD_DIR} )

      # Check Python Version (should see version and path to local python module)
      #--------------------------------
      echo "###################### CHECK GLOBAL PYTHON VERSION HERE: ######################"
      python -c 'import osgeo.gdal; print osgeo.gdal.__version__; print osgeo.gdal.__file__'

      # Install Python module to VENV
      #--------------------------------
      source /opt/python/run/venv/bin/activate
      (cd ${GDAL_PYTHON_INSTALL_PATH}; python setup.py install)

      # Check Python Version (should see version and path to local python module)
      #--------------------------------
      echo "###################### CHECK VENV PYTHON VERSION HERE: ######################"
      python -c 'import osgeo.gdal; print osgeo.gdal.__version__; print osgeo.gdal.__file__'

      # deactivate


commands:
  01_get_paths:
    command: "source /etc/profile.d/gdal_paths.sh"

  02_make_install_exec:
    command: chmod +x /tmp/install_gdal.sh

  03_install_gdal:
    command: /tmp/install_gdal.sh

  04_update_ld_library_path:
    command: source /etc/profile.d/gdal_paths.sh; echo ${GDAL_LIB_PATH} > /etc/ld.so.conf.d/gdal_path.conf

  05_refresh_shared_libraries:
    command: ldconfig

  06_set_debug:
    command: export LD_DEBUG=files


container_commands:
  01_make_python_install_exec:
    command: chmod +x /tmp/install_python_gdal.sh

  02_install_python_gdal:
    command: /tmp/install_python_gdal.sh
